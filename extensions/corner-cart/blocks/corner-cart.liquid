<script>
  window.__OPTIMAIO_CAMPAIGNS__ = {{ shop.metafields.optimaio_cart.campaigns.value | json }};
</script>
<script src="{{ 'free-gift.js' | asset_url }}" defer></script>

 
 
<!-- Optimaio Universal Responsive Cart Drawer -->
<div id="optimaio-corner-cart">
  üõí <span id="optimaio-corner-cart-count">0</span>
</div>
 
<div id="optimaio-cart-drawer" class="optimaio-cart-drawer" data-active-tab="cart">
  <!-- Header -->
  <div class="optimaio-cart-drawer__header">
    <h2>My Cart</h2>
    <button type="button" class="optimaio-cart-drawer__close">√ó</button>
  </div>
 
  <!-- Middle Scrollable Body -->
  <div class="optimaio-cart-drawer__middle">
 
    <!-- TAB: CART -->
    <div class="optimaio-cart-tab optimaio-cart-tab--cart" data-tab="cart">
      <div class="optimaio-cart-drawer__alert">üéÅ Free Gift unlocked on ‚Çπ1250+</div>
      <div class="optimaio-cart-drawer__progress">
        <div class="optimaio-step done">Free Deo</div>
        <div class="optimaio-step">Free Travel Pouch</div>
        <div class="optimaio-step">Free Watch</div>
      </div>
 
      <div class="optimaio-cart-drawer__items"></div>
 
      <div class="optimaio-cart-drawer__empty" style="display:none;">
        <p>Your cart is empty</p>
        <a href="/" class="optimaio-continue-btn">Continue Shopping</a>
      </div>
 
      <div class="optimaio-cart-drawer__recommendations">
        <h3>You might also like</h3>
        <div class="optimaio-recommendations-list"></div>
      </div>
    </div>
 
    <!-- TAB: OFFERS -->
    <div class="optimaio-cart-tab optimaio-cart-tab--offers" data-tab="offers">
      <h3>Exclusive Offers üéâ</h3>
      <ul class="optimaio-offers-list">
        <li>Buy 2 get 1 Free</li>
        <li>Flat 20% off on orders above ‚Çπ2000</li>
        <li>Festive Combo Packs starting at ‚Çπ999</li>
      </ul>
    </div>
  </div>
 
  <!-- Footer Summary -->
  <div class="optimaio-cart-drawer__summary-checkout">
    <div class="optimaio-cart-drawer__summary">
      <div class="optimaio-discount-row">
        <span class="optimaio-discount-label">Discount:</span>
        <span class="optimaio-discount-amount">‚Çπ0</span>
      </div>
      <div class="optimaio-total-row">
        <span class="optimaio-total-label">Total:</span>
        <span class="optimaio-total-amount">‚Çπ0</span>
      </div>
    </div>
    <button onclick="window.location='/checkout'" class="optimaio-checkout-btn">Proceed to Checkout</button>
  </div>
 
  <!-- Footer Tabs -->
  <div class="optimaio-cart-drawer__footer">
    <button class="optimaio-tab-btn active" data-target="cart">üõí Cart</button>
    <button class="optimaio-tab-btn" data-target="offers">üéÅ Offers</button>
  </div>
</div>
 
<script>
(function(){
  if(window.OptimaioCartDrawerInit) return;
  window.OptimaioCartDrawerInit = true;
 
  document.addEventListener("DOMContentLoaded", initOptimaioDrawer);
  document.addEventListener("shopify:section:load", initOptimaioDrawer);
 
  function initOptimaioDrawer(){
    const cornerCart = document.getElementById("optimaio-corner-cart");
    const cartDrawer = document.getElementById("optimaio-cart-drawer");
    if(!cornerCart || !cartDrawer) return;
 
    const itemsContainer = cartDrawer.querySelector(".optimaio-cart-drawer__items");
    const emptyState = cartDrawer.querySelector(".optimaio-cart-drawer__empty");
    const closeBtn = cartDrawer.querySelector(".optimaio-cart-drawer__close");
    const totalEl = cartDrawer.querySelector(".optimaio-total-amount");
    const discountEl = cartDrawer.querySelector(".optimaio-discount-amount");
 
    function clearThemeCartEffects() {
      ["overflow-hidden","js-drawer-open","menu-open","lock-scroll","no-scroll"].forEach(cls => {
        document.documentElement.classList.remove(cls);
        document.body.classList.remove(cls);
      });
      document.querySelectorAll('details[open]').forEach(d => {
        if (d.id?.toLowerCase().includes('cart') || d.closest('cart-drawer') || d.classList.contains('drawer'))
          d.open = false;
      });
      const OVERLAYS = [
        '#CartDrawer-Overlay','.cart-drawer__overlay','.drawer__overlay',
        '.menu-drawer__overlay','.modal__overlay','.modal-overlay',
        '.cart-notification__overlay','cart-notification','cart-drawer',
        '.side-drawer__overlay','.AjaxCart','.ajaxcart','.CartPopup'
      ];
      OVERLAYS.forEach(sel => {
        document.querySelectorAll(sel).forEach(el => {
          el.classList.remove('active','is-active','open','visible','animate');
          el.removeAttribute('open');
          el.style.opacity='';el.style.visibility='';el.style.pointerEvents='';
          el.style.display='none';
        });
      });
    }
 
    function setActiveTab(tab) {
      cartDrawer.setAttribute("data-active-tab", tab);
      cartDrawer.querySelectorAll(".optimaio-tab-btn").forEach(b =>
        b.classList.toggle("active", b.dataset.target === tab)
      );
    }
    cartDrawer.querySelector(".optimaio-cart-drawer__footer").addEventListener("click", (e) => {
      const btn = e.target.closest(".optimaio-tab-btn");
      if (!btn) return;
      setActiveTab(btn.dataset.target);
    });
    setActiveTab("cart");
 
    function renderCart(cart) {
      document.getElementById("optimaio-corner-cart-count").textContent = cart.item_count;
      if (cart.item_count === 0) {
        itemsContainer.innerHTML = "";
        emptyState.style.display = "flex";
        totalEl.textContent = "‚Çπ0";
        discountEl.textContent = "‚Çπ0";
        document.querySelector(".optimaio-recommendations-list").innerHTML = "";
        return;
      }
      emptyState.style.display = "none";
      itemsContainer.innerHTML = cart.items.map(item => `
  <div class="optimaio-cart-item-card">
    <div class="optimaio-cart-item__image"><img src="${item.image}" alt="${item.product_title}"></div>
    <div class="optimaio-cart-item__info">
      <div class="optimaio-cart-item__top">
        <p class="optimaio-cart-item__title">${item.product_title}</p>
        <button class="optimaio-cart-item__remove" data-key="${item.key}">√ó</button>
      </div>
      ${item.variant_title && item.variant_title !== "Default Title" ? `<p class="optimaio-cart-item__variant">${item.variant_title}</p>` : ""}
      <div class="optimaio-cart-item__bottom">
        <div class="optimaio-cart-item__actions">
          <button class="optimaio-qty-btn" data-key="${item.key}" data-change="-1">‚àí</button>
          <span class="optimaio-cart-item__qty">${item.quantity}</span>
          <button class="optimaio-qty-btn" data-key="${item.key}" data-change="1">+</button>
        </div>
        <div class="optimaio-cart-item__pricing">
          ${item.original_line_price > item.final_line_price
            ? `<span class="optimaio-compare-at">‚Çπ${(item.original_line_price/100).toLocaleString()}</span>` : ""}
          <span class="optimaio-price">‚Çπ${(item.final_line_price/100).toLocaleString()}</span>
        </div>
      </div>
      ${item.discounts && item.discounts.length ? `
        <div class="optimaio-cart-item__discount">
          ${item.discounts.map(d => `<span>${d.title}</span>`).join('<br>')}
        </div>` : ''}
    </div>
  </div>
`).join("");
 
      totalEl.textContent = "‚Çπ" + (cart.total_price / 100).toLocaleString();
      discountEl.textContent = "-‚Çπ" + ((cart.original_total_price - cart.total_price) / 100).toLocaleString();
      if (cart.items.length) loadRecommendations(cart.items[0].product_id);
      attachItemHandlers();
    }
 
    async function getCartAndRender() {
      const res = await fetch("/cart.js");
      const cart = await res.json();
      renderCart(cart);
    }
 
    function attachItemHandlers() {
      itemsContainer.querySelectorAll(".optimaio-qty-btn").forEach(btn => {
        btn.addEventListener("click", async () => {
          const key = btn.dataset.key;
          const delta = parseInt(btn.dataset.change);
          const qtyEl = btn.parentElement.querySelector(".optimaio-cart-item__qty");
          const currentQty = parseInt(qtyEl.textContent);
          const newQty = Math.max(1, currentQty + delta);
          btn.classList.add("loading"); btn.disabled = true;
          await fetch("/cart/change.js", {
            method:"POST", headers:{"Content-Type":"application/json"},
            body:JSON.stringify({ id:key, quantity:newQty })
          })
          .then(res=>res.json())
          .then(cart=>renderCart(cart))
          .finally(()=>{btn.classList.remove("loading"); btn.disabled=false;});
        });
      });
      itemsContainer.querySelectorAll(".optimaio-cart-item__remove").forEach(btn => {
        btn.addEventListener("click", async () => {
          btn.classList.add("loading"); btn.disabled = true;
          await fetch("/cart/change.js", {
            method:"POST", headers:{"Content-Type":"application/json"},
            body:JSON.stringify({ id:btn.dataset.key, quantity:0 })
          })
          .then(res=>res.json())
          .then(cart=>renderCart(cart))
          .finally(()=>{btn.classList.remove("loading"); btn.disabled=false;});
        });
      });
    }
 
    async function loadRecommendations(productId) {
      const res = await fetch(`/recommendations/products.json?product_id=${productId}&intent=complementary&limit=4`);
      const data = await res.json();
      const container = document.querySelector(".optimaio-recommendations-list");
      if (!data.products.length) return (container.innerHTML = "");
      container.innerHTML = data.products.map(p => `
        <div class="optimaio-recommendation-card">
          <div class="optimaio-rec-image"><img src="${p.featured_image}" alt="${p.title}"></div>
          <div class="optimaio-rec-content"><p class="optimaio-rec-title">${p.title}</p>
          <p class="optimaio-rec-price">‚Çπ${(p.variants[0].price / 100).toLocaleString()}</p></div>
          <button class="optimaio-rec-add" data-id="${p.variants[0].id}">Add</button>
        </div>
      `).join("");
      container.querySelectorAll(".optimaio-rec-add").forEach(btn => {
        btn.addEventListener("click", async () => {
          btn.classList.add("loading"); btn.disabled = true;
          await fetch("/cart/add.js", {
            method:"POST", headers:{"Content-Type":"application/json"},
            body:JSON.stringify({ id:btn.dataset.id, quantity:1 })
          })
          .then(()=>getCartAndRender())
          .finally(()=>{btn.classList.remove("loading"); btn.disabled=false;});
        });
      });
    }
 
    function openDrawer(){ clearThemeCartEffects(); getCartAndRender(); cartDrawer.classList.add("open"); }
    function closeDrawer(){ cartDrawer.classList.remove("open"); clearThemeCartEffects(); }
 
    cornerCart.addEventListener("click", openDrawer);
    closeBtn.addEventListener("click", closeDrawer);
    window.addEventListener("keydown", e=>{if(e.key==="Escape") closeDrawer();});
 
    const nativeFetch = window.fetch;
    window.fetch = async (...args) => {
      const res = await nativeFetch(...args);
      const url = typeof args[0] === "string" ? args[0] : args[0].url || "";
      if (url.includes("/cart/add")) {
        clearThemeCartEffects();
        await getCartAndRender();
        cartDrawer.classList.add("open");
      }
      return res;
    };
 
    function bindCartTriggers() {
      const selectors = [
        '#cart-icon-bubble','.header__icon--cart','a[href="/cart"]',
        'button[data-action="open-cart"]','[aria-controls*="cart"]',
        '[data-cart-toggle]','[data-cart-trigger]','[data-drawer-target="cart-drawer"]'
      ];
      document.querySelectorAll(selectors.join(',')).forEach(trigger => {
        if (trigger.dataset.optimaioBound) return;
        trigger.dataset.optimaioBound = "true";
        trigger.addEventListener("click", (e) => {
          e.preventDefault(); e.stopPropagation();
          clearThemeCartEffects(); openDrawer();
        });
      });
    }
 
    bindCartTriggers();
    setTimeout(bindCartTriggers, 1500);
    const observer = new MutationObserver(() => bindCartTriggers());
    observer.observe(document.body, { childList:true, subtree:true });
    window.addEventListener("shopify:section:load", bindCartTriggers);
    getCartAndRender();
  }
})();
</script>
 
<style>
 
/* ‚úÖ All styles prefixed with optimaio- */
.optimaio-cart-item__discount {
  font-size: 12px;
  color: #a33;
  margin-top: 4px;
  background: #fdeaea;
  padding: 4px 6px;
  border-radius: 4px;
  display: inline-block;
}
 
.optimaio-cart-item-card{display:flex;gap:12px;background:#fff;border:1px solid #eee;border-radius:10px;padding:12px;position:relative;}
.optimaio-cart-item__image img{width:70px;height:70px;border-radius:8px;object-fit:cover;}
.optimaio-cart-item__info{flex:1;display:flex;flex-direction:column;justify-content:space-between;}
.optimaio-cart-item__top{display:flex;justify-content:space-between;align-items:flex-start;gap:8px;}
.optimaio-cart-item__title{font-weight:600;margin:0;line-height:1.4;flex:1;white-space:normal;word-break:break-word;}
.optimaio-cart-item__remove{flex-shrink:0;background:none;border:none;font-size:16px;cursor:pointer;color:#888;line-height:1;}
.optimaio-cart-item__remove:hover{color:#d33;}
.optimaio-cart-item__variant{font-size:12px;color:#666;margin:2px 0 6px;}
.optimaio-cart-item__bottom{display:flex;justify-content:space-between;align-items:center;margin-top:auto;}
.optimaio-cart-item__pricing{display:flex;gap:6px;align-items:baseline;}
.optimaio-compare-at{text-decoration:line-through;color:#999;font-size:12px;}
.optimaio-price{font-weight:700;color:#222;}
.optimaio-cart-tab{display:none;}
.optimaio-cart-drawer[data-active-tab="cart"] .optimaio-cart-tab--cart{display:block;}
.optimaio-cart-drawer[data-active-tab="offers"] .optimaio-cart-tab--offers{display:block;}
.optimaio-cart-drawer[data-active-tab="offers"] .optimaio-cart-drawer__summary-checkout{display:none;}
.optimaio-qty-btn.loading,.optimaio-cart-item__remove.loading,.optimaio-rec-add.loading{position:relative;color:transparent!important;pointer-events:none;}
.optimaio-qty-btn.loading::after,.optimaio-cart-item__remove.loading::after,.optimaio-rec-add.loading::after{content:"";position:absolute;top:50%;left:50%;width:12px;height:12px;border:2px solid #999;border-top-color:transparent;border-radius:50%;transform:translate(-50%,-50%);animation:optimaio-spin .6s linear infinite;}
@keyframes optimaio-spin{to{transform:translate(-50%,-50%) rotate(360deg);}}
#optimaio-corner-cart,.optimaio-cart-drawer{font-family:Inter,sans-serif;box-sizing:border-box;}
#optimaio-corner-cart{position:fixed;bottom:20px;right:20px;background:#000;color:#fff;padding:10px 16px;border-radius:40px;cursor:pointer;font-size:14px;z-index:9999;box-shadow:0 4px 12px rgba(0,0,0,0.2);}
#optimaio-corner-cart span{font-weight:700;margin:0 4px;}
.optimaio-cart-drawer{position:fixed;top:0;right:0;width:90%;max-width:420px;height:100%;background:#fff7f8;transform:translateX(100%);transition:transform .3s ease;box-shadow:-3px 0 12px rgba(0,0,0,0.25);z-index:10000;display:flex;flex-direction:column;}
.optimaio-cart-drawer.open{transform:translateX(0);}
.optimaio-cart-drawer__header{flex-shrink:0;display:flex;justify-content:space-between;align-items:center;padding:14px 18px;border-bottom:1px solid #eee;background:#fff;position:sticky;top:0;z-index:5;}
.optimaio-cart-drawer__header h2{font-size:18px;margin:0;font-weight:600;}
.optimaio-cart-drawer__close{font-size:20px;background:none;border:none;cursor:pointer;}
.optimaio-cart-drawer__middle{flex:1;overflow-y:auto;padding:12px 16px;}
.optimaio-cart-drawer__middle::-webkit-scrollbar{width:6px;}
.optimaio-cart-drawer__middle::-webkit-scrollbar-thumb{background:#ccc;border-radius:4px;}
.optimaio-cart-drawer__alert{background:#fdeaea;color:#a33;padding:8px;border-radius:8px;text-align:center;font-size:13px;margin-bottom:8px;}
.optimaio-cart-drawer__progress{display:flex;justify-content:space-between;font-size:11px;margin-bottom:10px;}
.optimaio-cart-drawer__progress .optimaio-step{flex:1;text-align:center;border-bottom:2px solid #ccc;padding-bottom:3px;}
.optimaio-cart-drawer__progress .done{border-color:#d48b8b;font-weight:600;}
.optimaio-cart-drawer__items{display:flex;flex-direction:column;gap:10px;}
.optimaio-cart-drawer__empty{display:flex;flex-direction:column;align-items:center;justify-content:center;min-height:50vh;color:#666;text-align:center;gap:12px;}
.optimaio-continue-btn{background:#000;color:#fff;padding:10px 20px;border-radius:25px;font-size:14px;text-decoration:none;}
.optimaio-recommendations-list{display:flex;overflow-x:auto;gap:10px;padding-bottom:8px;}
.optimaio-recommendation-card{flex:0 0 75%;background:#fff;border:1px solid #eee;border-radius:8px;padding:8px;display:flex;align-items:center;gap:10px;}
.optimaio-rec-image img{width:60px;height:60px;border-radius:6px;object-fit:cover;}
.optimaio-rec-title{font-size:12px;font-weight:600;margin:0;}
.optimaio-rec-price{font-size:12px;font-weight:500;color:#222;margin:2px 0;}
.optimaio-rec-add{background:#000;color:#fff;border:none;padding:6px 10px;border-radius:4px;cursor:pointer;font-size:12px;}
.optimaio-cart-drawer__summary-checkout{flex-shrink:0;border-top:1px solid #eee;padding:12px 14px;background:#fff;}
.optimaio-discount-row,.optimaio-total-row{display:flex;justify-content:space-between;font-size:14px;}
.optimaio-discount-label,.optimaio-discount-amount{color:#a33;}
.optimaio-total-label{font-weight:600;}
.optimaio-total-amount{font-weight:700;}
.optimaio-checkout-btn{margin-top:8px;width:100%;background:#000;color:#fff;padding:10px;border:none;border-radius:6px;font-weight:600;cursor:pointer;}
.optimaio-cart-drawer__footer{flex-shrink:0;display:flex;justify-content:space-around;border-top:1px solid #eee;background:#fff;padding:12px;position:sticky;bottom:0;}
.optimaio-cart-drawer__footer button{border:none;background:none;cursor:pointer;font-size:14px;font-weight:500;color:#444;}
.optimaio-cart-drawer__footer button.active{color:#d48b8b;font-weight:600;}
@media (max-width:768px){#optimaio-corner-cart{bottom:15px;right:15px;font-size:13px;padding:8px 14px;}}
</style>
 
{% schema %}
{
"name": "Optimaio Corner Cart",
"target": "body",
"settings": []
}
{% endschema %}
 